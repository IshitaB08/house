{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/panel-menu/dropdown/dropdown.component.html","./src/app/panel-menu/panel-menu.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/panel-menu/dropdown/dropdown.component.css","./src/app/panel-menu/dropdown/dropdown.component.ts","./src/app/panel-menu/panel-menu.component.css","./src/app/panel-menu/panel-menu.component.ts","./src/app/panel-menu/panel-menu.module.ts","./src/app/panel-menu/panel-menu.options.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<nav class=\\\"navbar navbar-expand navbar-dark bg-primary navbar-top\\\">\\n  <div class=\\\"collapse navbar-collapse\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"navbar-brand\\\" style=\\\"font-weight: 700; color: whitesmoke;\\\">\\n        ngx-bootstrap ~ kitchen sink\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav my-2 my-lg-0\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-item\\\" style=\\\"font-weight: 700; color: whitesmoke;\\\" alt=\\\"Fork me on GitHub\\\" target=\\\"_blank\\\" title=\\\"View Source\\\"\\n           href=\\\"https://github.com/bradyhouse/house/tree/master/fiddles/angular2-cli/fiddle-0029-EntAgGridChartSeriesClick\\\">\\n          Fork Me On Github\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<div class=\\\"panel\\\" [ngStyle]=\\\"{'height': panelHeight + 'px'}\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <h3 [innerHTML]=\\\"title\\\"></h3>\\n    <app-panel-menu [options]=\\\"panelMenuOptions\\\"></app-panel-menu>\\n  </div>\\n  <div class=\\\"panel-body no-padding\\\">\\n    <div class=\\\"jumbotron\\\">C o n t e n t</div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n<!--<div dropdown #dropdown=\\\"bs-dropdown\\\" [autoClose]=\\\"false\\\">\\n  <button dropdownToggle type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\">\\n    Button dropdown <span class=\\\"caret\\\"></span>\\n  </button>\\n  <ul *dropdownMenu class=\\\"dropdown-menu pull-right\\\">\\n    <li role=\\\"menuitem\\\" *ngFor=\\\"let option of options\\\"\\n        (click)=\\\"onOptionClick(option)\\\">\\n      <a id=\\\"{{option.cssClass}}\\\">{{option.text}}</a>\\n    </li>\\n  </ul>\\n</div>-->\\n\\n<!--<span dropdown (onShown)=\\\"onShown()\\\" (onHidden)=\\\"onHidden()\\\" (isOpenChange)=\\\"isOpenChange()\\\">\\n    <a href id=\\\"\\\" dropdownToggle (click)=\\\"false\\\"\\n       aria-controls=\\\"basic-link-dropdown\\\">Click me for a dropdown, yo!</a>\\n    <ul id=\\\"basic-link-dropdown\\\" *dropdownMenu class=\\\"dropdown-menu\\\"\\n        role=\\\"menu\\\" aria-labelledby=\\\"basic-link\\\">\\n      <li *ngFor=\\\"let choice of items\\\">\\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">{{choice}}</a>\\n      </li>\\n    </ul>\\n  </span>-->\\n\\n\\n<span dropdown>\\n    <a href (click)=\\\"false\\\" class=\\\"round\\\"\\n    aria-controls=\\\"basic-link-dropdown\\\"\\n       dropdownToggle>\\n      <i class=\\\"mdi mdi-dots-vertical\\\"></i>\\n    </a>\\n    <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\" aria-labelledby=\\\"basic-link\\\">\\n      <li *ngFor=\\\"let option of options\\\"\\n          (click)=\\\"onOptionClick(option)\\\">\\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\" id=\\\"{{option.cssClass}}\\\">{{option.text}}</a>\\n      </li>\\n    </ul>\\n  </span>\"","module.exports = \"<ul class=\\\"nav navbar-nav pull-right\\\">\\n    <li *ngIf=\\\"options?.loader\\\">\\n      <div class=\\\"circle-loader\\\"></div>\\n    </li>\\n    <li *ngIf=\\\"options?.export\\\">\\n      <a class=\\\"round\\\">\\n        <i class=\\\"mdi mdi-file-excel\\\"\\n           [title]=\\\"options?.export\\\">\\n        </i>\\n      </a>\\n    </li>\\n    <li *ngIf=\\\"options?.info\\\">\\n      <a class=\\\"round\\\">\\n        <i class=\\\"mdi mdi-information-outline\\\"\\n           [title]=\\\"options?.info\\\">\\n        </i>\\n      </a>\\n    </li>\\n    <li *ngIf=\\\"!options?.collapse\\\">\\n      <a class=\\\"round\\\"\\n         (click)=\\\"onToggle('fullScreen')\\\">\\n        <i class=\\\"mdi\\\"\\n           [title]=\\\"options?.fullScreen ? 'Close full screen' : 'Open full screen'\\\"\\n           [ngClass]=\\\"{\\n          'mdi-arrow-expand': !options?.fullScreen,\\n          'mdi-arrow-compress': options?.fullScreen}\\\">\\n        </i>\\n      </a>\\n    </li>\\n    <li *ngIf=\\\"!options?.fullScreen\\\">\\n      <a class=\\\"round\\\"\\n         (click)=\\\"onToggle('collapse')\\\">\\n        <i class=\\\"mdi\\\"\\n           [title]=\\\"options?.collapse ? 'Hide panel' : 'Show panel'\\\"\\n           [ngClass]=\\\"{\\n         'mdi-chevron-down': options?.collapse,\\n         'mdi-chevron-up': !options?.collapse}\\\">\\n        </i>\\n      </a>\\n    </li>\\n    <li class=\\\"dropdown\\\"\\n        *ngIf=\\\"options?.dropdown?.length > 0\\\">\\n      <app-panel-menu-dropdown [options]=\\\"options?.dropdown\\\"\\n                               (events)=\\\"onEvents($event)\\\">\\n      </app-panel-menu-dropdown>\\n    </li>\\n    <li *ngIf=\\\"options?.close\\\">\\n      <a class=\\\"round\\\">\\n        <i class=\\\"mdi mdi-close\\\"\\n           (click)=\\\"onEvents({type:'close'})\\\">\\n        </i>\\n      </a>\\n    </li>\\n  </ul>\\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { PanelMenu, PanelMenuEvent, DropdownItemEnum } from './panel-menu/panel-menu.options';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  panelMenuOptions: PanelMenu;\n  panelHeight: number;\n  title: string;\n  constructor() {\n    this.title = 'Title';\n    this.panelHeight = Math.floor(.90 * window.innerHeight);\n    this.panelMenuOptions = {\n      collapse: true,\n      fullScreen: true,\n      dropdown: [\n        DropdownItemEnum.Columns,\n        DropdownItemEnum.Csv,\n        DropdownItemEnum.Filter,\n        DropdownItemEnum.Reset\n      ]\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { PanelMenuModule } from './panel-menu/panel-menu.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    PanelMenuModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhbmVsLW1lbnUvZHJvcGRvd24vZHJvcGRvd24uY29tcG9uZW50LmNzcyJ9 */\"","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport { Dropdown } from './dropdown.options';\n\nimport { PanelMenuEvent } from '../panel-menu.options';\n\n@Component({\n  selector: 'app-panel-menu-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.css']\n})\nexport class DropdownComponent {\n\n  @Input()\n  options: Dropdown;\n\n  @Output()\n  events: EventEmitter<PanelMenuEvent>;\n\n  constructor() {\n    this.events = new EventEmitter();\n  }\n\n  onOptionClick(option: Dropdown) {\n    this.events.emit({\n      type: option.id,\n      data: option.data\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhbmVsLW1lbnUvcGFuZWwtbWVudS5jb21wb25lbnQuY3NzIn0= */\"","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport { PanelMenuEvent, PanelMenu } from './panel-menu.options';\n\n@Component({\n  selector: 'app-panel-menu',\n  templateUrl: './panel-menu.component.html',\n  styleUrls: ['./panel-menu.component.css']\n})\nexport class PanelMenuComponent {\n\n  @Input()\n  options: PanelMenu;\n\n  @Output()\n  events: EventEmitter<PanelMenuEvent>;\n\n  constructor() {\n    this.events = new EventEmitter();\n  }\n\n  onToggle(type: string) {\n    this.options[type] = !this.options[type];\n    this.events.emit({type, data: this.options[type]});\n  }\n\n  onEvents(event: PanelMenuEvent) {\n    this.events.emit(event);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PanelMenuComponent } from './panel-menu.component';\nimport { DropdownComponent } from './dropdown/dropdown.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\n\n@NgModule({\n  declarations: [PanelMenuComponent, DropdownComponent],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    BsDropdownModule.forRoot()\n  ],\n  exports: [PanelMenuComponent],\n  entryComponents: [PanelMenuComponent]\n})\nexport class PanelMenuModule { }\n","\nimport { Dropdown } from './dropdown/dropdown.options';\n\n\nexport interface PanelMenuEvent {\n    /**\n     * The type of event.\n     */\n    type?: string | number;\n\n    /**\n     * Data that is emitted.\n     */\n    data?: any;\n\n    /**\n     * grid state -- optional parameter used by ag-grid\n     */\n     gridState?: any;\n  }\n\nexport interface PanelMenu {\n  /**\n   * Full screen toggle icon.\n   */\n  fullScreen?:boolean;\n\n  /**\n   * Collapse/expand toggle icon.\n   */\n  collapse?:boolean;\n\n  /**\n   * Close icon.\n   */\n  close?:boolean;\n\n  /**\n   * Loader animation.\n   */\n  loader?:boolean;\n\n  /**\n   * Info icon with a tooltip that shows additional info.\n   */\n  info?:string;\n\n  /**\n   * Export icon with a tooltip that shows additional info.\n   */\n   export?:string;\n\n  /**\n   * Dropdown options.\n   */\n  dropdown?:Dropdown[];\n\n  /**\n   * This is needed if we want to dynamically reference an option.\n   */\n  [key: string]:any;\n}\n\n\nexport class DropDownItemTypeEnum {\n  /**\n   * Reloads the data inside the panel.\n   * @type {string}\n   */\n  static Reload = 'reload';\n\n  /**\n   * Exports the data\n   * @type {string}\n   */\n  static Export = 'export';\n\n  /**\n   * Resets the state\n   * @type {string}\n   */\n  static Reset = 'reset';\n\n  /**\n   * Show available columns.\n   * @type {string}\n   */\n  static Columns = 'columns';\n\n  /**\n   * Enable filtering header.\n   * @type {string}\n   */\n  static Filter = 'filter';\n\n  /**\n   * Enable filtering header.\n   * @type {string}\n   */\n  static Unfilter = 'unfilter';\n\n}\n\n\nexport class DropdownItemEnum {\n  /**\n   * Reloads the data inside the panel.\n   * @type {{id: string, text: string}}\n   */\n  static Reload = {\n    id: DropDownItemTypeEnum.Reload,\n    text: 'Reload',\n    cssClass: 'reload'\n  };\n\n  /**\n   * Resets the state\n   * @type {{id: string, text: string}}\n   */\n  static Reset = {\n    id: DropDownItemTypeEnum.Reset,\n    text: 'Reset Grid',\n    cssClass: 'reset'\n  };\n\n  /**\n   * Show available columns.\n   * @type {{id: string, text: string}}\n   */\n  static Columns = {\n    id: DropDownItemTypeEnum.Columns,\n    text: 'Columns',\n    cssClass: 'columns'\n  };\n\n  /**\n   * Exports the data as CSV\n   * @type {{id: string, text: string, param: string}}\n   */\n  static Csv = {\n    id: DropDownItemTypeEnum.Export,\n    text: 'Export to CSV',\n    data: 'csv',\n    cssClass: 'csv'\n  };\n\n  /**\n   * Exports the data as XLSX\n   * @type {{id: string, text: string, param: string}}\n   */\n  static Xls = {\n    id: DropDownItemTypeEnum.Export,\n    text: 'Export to XLS',\n    data: 'xls',\n    cssClass: 'xls'\n  };\n\n  /**\n   * Enable grid quick filter header\n   * @type {{id: string, text: string, param: string}}\n   */\n  static Filter = {\n    id: DropDownItemTypeEnum.Filter,\n    text: 'Filter',\n    cssClass: 'filter'\n  };\n\n  /**\n   * Disable grid quick filter header\n   * @type {{id: string, text: string, param: string}}\n   */\n  static Unfilter = {\n    id: DropDownItemTypeEnum.Unfilter,\n    text: 'Unfilter',\n    cssClass: 'unfilter'\n  };\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}